# Default values for backstage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
dockerRegistrySecretName: regcred

frontend:
  enabled: false
  replicaCount: 1
  image:
    repository: 626109959667.dkr.ecr.us-east-1.amazonaws.com/backstage-frontend
    tag: latest
    pullPolicy: IfNotPresent
  containerPort: 80
  serviceType: ClusterIP
  resources:
    requests:
      memory: 128Mi
    limits:
      memory: 256Mi

backend:
  enabled: true
  nodeEnv: development
  replicaCount: 1
  image:
    repository: 626109959667.dkr.ecr.us-east-1.amazonaws.com/backstage-backend
    tag: latest
    pullPolicy: IfNotPresent
  containerPort: 7007
  serviceType: ClusterIP
  postgresCertMountEnabled: true
  resources:
    requests:
      memory: 512Mi
    limits:
      memory: 1024Mi

lighthouse:
  enabled: true
  replicaCount: 1
  image:
    repository: roadiehq/lighthouse-audit-service
    tag: latest
    pullPolicy: IfNotPresent
  containerPort: 3003
  serviceType: ClusterIP
  postgresCertMountEnabled: true
  resources:
    requests:
      memory: 128Mi
    limits:
      memory: 256Mi
  database:
    connection:
      port:
      host:
      user:
      password:
      database: lighthouse_audit_service
    pathToDatabaseCa:

nameOverride: ''
fullnameOverride: ''

ingress:
  annotations:
    kubernetes.io/ingress.class: nginx

issuer:
  email:
  clusterIssuer: 'letsencrypt-staging'

global:
  postgresql:
    postgresqlUsername: backend-user
    caFilename: ca.crt
  nodeSelector: {}

postgresql:
  enabled: true
  nameOverride: postgresql
  tls:
    enabled: true
    certificatesSecret: backstage-postgresql-certs
    certFilename: tls.crt
    certKeyFilename: tls.key
  volumePermissions:
    enabled: true
  initdbScriptsSecret: backstage-postgresql-initdb

appConfig:
  app:
    baseUrl:
  lighthouse:
    baseUrl:
  backend:
    baseUrl: 
    listen:
      port: 7007
    database:
      client: pg
      connection:
        database: backstage_plugin_catalog
        host:
        user:
        port:
        password:
        ssl:
          rejectUnauthorized: false
          ca:   

configMap: {}
secret: {}



